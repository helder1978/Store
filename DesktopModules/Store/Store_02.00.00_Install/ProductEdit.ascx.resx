<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="labelModelName.Text" xml:space="preserve">
    <value>Model Name</value>
  </data>
  <data name="labelModelName.Help" xml:space="preserve">
    <value>Model name of the product.</value>
  </data>
  <data name="labelModelNumber.Text" xml:space="preserve">
    <value>Model Number</value>
  </data>
  <data name="labelModelNumber.Help" xml:space="preserve">
    <value>Model number of the product.</value>
  </data>
  <data name="labelSummary.Text" xml:space="preserve">
    <value>Summary</value>
  </data>
  <data name="labelSummary.Help" xml:space="preserve">
    <value>Short summary describing the product.</value>
  </data>
  <data name="labelUnitPrice.Text" xml:space="preserve">
    <value>Unit Price</value>
  </data>
  <data name="labelUnitPrice.Help" xml:space="preserve">
    <value>Price of the product per unit.</value>
  </data>
  <data name="labelImage.Text" xml:space="preserve">
    <value>Image</value>
  </data>
  <data name="labelImage.Help" xml:space="preserve">
    <value>Image of the product.</value>
  </data>
  <data name="labelArchived.Text" xml:space="preserve">
    <value>Archived</value>
  </data>
  <data name="labelArchived.Help" xml:space="preserve">
    <value>Indicates whether the item has been archived and is no longer active.</value>
  </data>
  <data name="labelDescription.Text" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="labelDescription.Help" xml:space="preserve">
    <value>Full description of the product.</value>
  </data>
  <data name="validatorUnitPrice.Text" xml:space="preserve">
    <value>Error! Please enter a valid price.</value>
  </data>
  <data name="labelSaleEndDate.Help" xml:space="preserve">
    <value>If this product is on special offer, then enter the end date of the special offer period here.</value>
  </data>
  <data name="labelSaleEndDate.Text" xml:space="preserve">
    <value>Special offer end date</value>
  </data>
  <data name="labelSalePrice.Help" xml:space="preserve">
    <value>If this product is on special offer, then enter the special offer price here.</value>
  </data>
  <data name="labelSalePrice.Text" xml:space="preserve">
    <value>Special offer unit price</value>
  </data>
  <data name="labelSaleStartDate.Help" xml:space="preserve">
    <value>If this product is on special offer, then enter the start date of the special offer period here.</value>
  </data>
  <data name="labelSaleStartDate.Text" xml:space="preserve">
    <value>Special offer start date</value>
  </data>
  <data name="btnClearEndDate.Text" xml:space="preserve">
    <value>Clear end date</value>
  </data>
  <data name="btnClearStartDate.Text" xml:space="preserve">
    <value>Clear start date</value>
  </data>
  <data name="dshSpecialOffer.Text" xml:space="preserve">
    <value>Special Offer Pricing</value>
  </data>
  <data name="validatorRequireUnitPrice.Text" xml:space="preserve">
    <value>* Price is required.</value>
  </data>
  <data name="validatorSalePrice.Text" xml:space="preserve">
    <value>Error! Please enter a valid price.</value>
  </data>
  <data name="labelCategory1.Text" xml:space="preserve">
    <value>Drink Type</value>
  </data>
  <data name="labelCategory1.Help" xml:space="preserve">
    <value>Drink Type of the report.</value>
  </data>
  <data name="labelCategory2.Text" xml:space="preserve">
    <value>Region</value>
  </data>
  <data name="labelCategory2.Help" xml:space="preserve">
    <value>Region of the product.</value>
  </data>
  <data name="labelCategory3.Text" xml:space="preserve">
    <value>Country</value>
  </data>
  <data name="labelCategory3.Help" xml:space="preserve">
    <value>Country of the product.</value>
  </data>
  <data name="labelNumPages.Text" xml:space="preserve">
    <value>Number of pages</value>
  </data>
  <data name="labelNumPages.Help" xml:space="preserve">
    <value>Number of pages of the report.</value>
  </data>
  <data name="labelPublishDate.Text" xml:space="preserve">
    <value>Publish Date</value>
  </data>
  <data name="labelPublishDate.Help" xml:space="preserve">
    <value>Date of publication of the report.</value>
  </data>
  <data name="labelDeliveryMethod.Text" xml:space="preserve">
    <value>Delivery Method</value>
  </data>
  <data name="labelDeliveryMethod.Help" xml:space="preserve">
    <value>Delivery methods availables.</value>
  </data>  
  <data name="labelAvailableOnline.Text" xml:space="preserve">
    <value>Available Online</value>
  </data>
  <data name="labelAvailableOnline.Help" xml:space="preserve">
    <value>Specifies if the report is available online.</value>
  </data>  
  <data name="labelFile.Text" xml:space="preserve">
    <value>Report File</value>
  </data>
  <data name="labelFile.Help" xml:space="preserve">
    <value>Report file.</value>
  </data>  
  <data name="labelPreview.Text" xml:space="preserve">
    <value>Preview File</value>
  </data>
  <data name="labelPreview.Help" xml:space="preserve">
    <value>File with the report preview.</value>
  </data>  
  <data name="labelImage2.Text" xml:space="preserve">
    <value>Detail image 1</value>
  </data>
  <data name="labelImage2.Help" xml:space="preserve">
    <value>First detail image.</value>
  </data>  
  <data name="labelImage3.Text" xml:space="preserve">
    <value>Detail image 2</value>
  </data>
  <data name="labelImage3.Help" xml:space="preserve">
    <value>Second detail image.</value>
  </data>  
</root>